
önceki derslerde AJAXla ilgili bigilendirmeye bak Intro da.

reqres den gelen JSON datayı istediğimiz gibi göstereceğiz.


servisin filtreleyip göndermesi daha mantıklı.
yoksa burada filtreleyebiliriz.



biz bunu ham js ile yaptık.
React te table component yazılıyor. daha sonra gelen datayı component e atılıyor. datagridview a veri bağlamak gibi.
Sanal DOM kullandığı için fakat arkada NodeJs kurulması lazım. onsuz olmuyor.

başka yerde tanımlayıp kullanabilirdik de. direkt evente bağladık. 

 xhr.onreadystatechange = function(){       kullanımı anonim fonksiyon. yani ismi olmadan da fonksiyon tanımlayabiliyoruz.

XMLHttpRequest bu hem XML hem JSON. önceden XML seriliaze de serialize yapılıyordu.

Fetch günümüz kullanımında bir metod.

XML artık bant genişliğini etkilediğinden çok kullanılmıyor. eski servislerde görebiliriz.
JSON XML den neredeyse yarı yarıya daha az veri gönderiyor. Bant genişliği çok önemli olduğundan artık dünyadaki bir çok serviste JSON üzerinden konuşuyor.


//---------------------------------------------------------------------------------------------------------------------

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>

    <script>

        function getData()
        {
            let xhr = new XMLHttpRequest();        //1. hindistandaki siteyi çekip getirecek.

            xhr.onreadystatechange = function(){        //2. onreadystatechange bir fonksiyon bağlandı
                
                //alert(xhr.responseText);
                //tum veriler yuklendiyse = 4                    //her veri gönderildikçe; 0 verinin gönderilmediği durum-1 gönderilmeye başlandığı durum-2-3-
                                                                                            4 verinin tamamı geldiyse 

                //ve  islem sariliysa     = 200                    //hata kodu 200: işlem başarılıysa yani ok dönüyorsa. kontrolü aşağıda açıklandı.
                // https://reqres.in/api/users?page=1   sitesini açtık. F12 developer tools açtık. Network girdik. Sayfayı yeniledik. ortadaki tablonun name başlığı altında sayfa geldi.
                        name yanındaki status işlem başarılı ise ok gelir.

                
                if(xhr.readyState==4 && xhr.status==200)        //5. detayları hemen yukarıda
                {
                    //alert(xhr.responseText);                    //getdataya tıkladı ve sitedeki veriler alert olarak geldi ama metin şeklinde. yani kullanıcı açısından anlamsız.
                    //document.writeln(xhr.responseText);         //getdataya tıkladı ve sitedeki veriler body e geldi ama metin şeklinde. yani kullanıcı açısından anlamsız.

                    let strJSON = xhr.responseText;                //6. iki seçenek var; 
                                                                        birisi JSON.parse, (bir JSON stringi objeye çevirmek istersek)
                                                                        diğeri JSON.stringfy (bir objeyi JSON haline getirmek istersek)
                    //JSON text'ini nesneye cevirmeli miyiz?
                    let obj= JSON.parse(strJSON);

                    let table = document.getElementById("tablo");    //7. body de daha önce tanımladığımız id adı tablo olan nesneyi seçip değişkene atadık. 
                    let satirlar="";
                    for(let i=0;i<obj.data.length;i++)               //8. dikkat!!! veriyi data içinden yakalayacağız. data propertysinin koleksiyonu. propertylerini de biliyor olmam lazım.
                    {
                        //document.writeln(obj.data[i].first_name);            // isimleri gövdeye yan yana yazdırdık fakat biz böyle istemiyoruz.
                        //document.createElement("h1");                        // bu şekilde de kullanımı var.
                        satirlar +="<tr>";
                        satirlar +="<td>" + obj.data[i].first_name + "</td>";
                        satirlar +="<td>" + obj.data[i].last_name + "</td>";
                        satirlar +="<td>" + obj.data[i].email + "</td>";
                        satirlar +="<td><img src='" + obj.data[i].avatar + "' /></td>";
                        satirlar +="</tr>";   
                    }
                    table.innerHTML=satirlar;
                }
            };
            //1.Parametre : HttpVerb                                                 //get, post - daha önce anlatılan
            //2.Parametre : Adres                                                    //servisin adresi. bazıları ucretli yani tokenli olabilir.
            //3.Parametre : true olursa veri asenkron olarak getirilir...            //verinin asenkron olarak çalışmasını istiyorsak true, istemiyorsak false.

            xhr.open("GET","https://reqres.in/api/users?page=1",true);            //3. parametre detayları yukarıda
            xhr.send();                                                           //4.
        }


        async function getFetch()
        {
            fetch("https://reqres.in/api/users?page=1").then(x=>x.text()).then(x=>alert(x));        //bunun güzelliği; string istersem böyle.then(x=>x.text()) ama text yerine json dersem alertta object döüyor.
                                                                                                        burada parse kullanmanıza gerek yok. objeye çeviriuor. al kullan. 
                                                                                                        xhr.readyState==4 && xhr.status==200 felan yok.
        }

    </script>

</head>

<body>                                                        //DİKKAT : 0. önce body içini hazırladık.

    <button onclick="getData()">Get Data</button>

    <button onclick="getFetch()">Get Data with Fetch</button>        // dikkat!!! fetch uygulamasının butonu

    <table id="tablo" table="1"></table>            // gelen veriyi göstereceğimiz tablo        table="1" nedir araştır??????

    <script>

        //AJAX:Asynchronous Javascript And XML
        //XMLHttpRequest : ilk kullanım şekilleri...        //yukarıda hoca bununla yaptı
        //jQuery => ajax rutinleri geldi ve daha kolay 
        //fetch() //Gunumuz dunyasının genel kullanımı... 2018 de gelen yaklaşımı. aktif kullanılan. yukarıda hoca bununla yaptı.
    
    </script>

</body>

</html>


-------------------------------------------------------

KOPYALA YAPIŞTIR DİREKT ÇALIŞTIRMA İÇİN TEKRARI

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script>
        function getData()
        {
            let xhr = new XMLHttpRequest();

            xhr.onreadystatechange = function(){
                //alert(xhr.responseText);
                //tum veriler yuklendiyse = 4
                //ve  islem sariliysa     = 200
                if(xhr.readyState==4 && xhr.status==200)
                {
                    //alert(xhr.responseText);
                    //document.writeln(xhr.responseText);

                    let strJSON = xhr.responseText;
                    //JSON text'ini nesneye cevirmeli miyiz?
                    let obj= JSON.parse(strJSON);

                    let table = document.getElementById("tablo");
                    let satirlar="";
                    for(let i=0;i<obj.data.length;i++)
                    {
                        //document.createElement("h1");
                        satirlar +="<tr>";
                        satirlar +="<td>" + obj.data[i].first_name + "</td>";
                        satirlar +="<td>" + obj.data[i].last_name + "</td>";
                        satirlar +="<td>" + obj.data[i].email + "</td>";
                        satirlar +="<td><img src='" + obj.data[i].avatar + "' /></td>";
                        satirlar +="</tr>";
                        //document.writeln(obj.data[i].first_name);
                    }
                    table.innerHTML=satirlar;
                }
            };
            //1.Parametre : HttpVerb
            //2.Parametre : Adres
            //3.Parametre : true olursa veri asenkron olara getirilir...
            xhr.open("GET","https://reqres.in/api/users?page=1",true);
            xhr.send();
        }

        async function getFetch()
        {
            fetch("https://reqres.in/api/users?page=1").then(x=>x.text()).then(x=>alert(x));
        }
    </script>
</head>
<body>
    <button onclick="getData()">Get Data</button>
    <button onclick="getFetch()">Get Data with Fetch</button>
    <table id="tablo" table="1"></table>
    <script>
        //AJAX:Asynchronous Javascript And XML
        //XMLHttpRequest : ilk kullanım şekilleri...
        //jQuery => ajax
        //fetch() //Gunumuz dunyasının genel kullanımı...
    
    </script>
</body>
</html>
